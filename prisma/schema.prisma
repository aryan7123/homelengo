// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @db.VarChar(255)
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  reviews  Review[]
  likedProperty String[]  
}

model Property {
  id             Int      @id @default(autoincrement())
  title          String   @db.VarChar(255)
  description    String   @db.Text
  fullAddress    String   @db.VarChar(255)
  zipCode        String   @db.VarChar(255)
  country        String   @db.VarChar(255)
  provinceState  String   @db.VarChar(255)
  neighbourhood  String   @db.VarChar(255)
  location       String   @db.VarChar(255)
  price          String   @db.VarChar(255)
  unitPrice      String?
  beforePrice    String?
  afterPrice     String?
  propertyType   String   @db.VarChar(255)
  propertyStatus String   @db.VarChar(255)
  propertyLabel  String   @db.VarChar(255)
  size           String   @db.VarChar(255)
  landArea       String   @db.VarChar(255)
  propertyId     String   @db.VarChar(255)
  rooms          String   @db.VarChar(255)
  bedrooms       String   @db.VarChar(255)
  bathrooms      String   @db.VarChar(255)
  garage         String   @db.VarChar(255)
  garageSize     String   @db.VarChar(255)
  yearBuilt      String   @db.VarChar(255)
  amenities      String[]
  photos         String[]
  reviews        Review[]
  status         String   @default("Pending") @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Review {
  id         Int      @id @default(autoincrement())
  username   String?   @db.VarChar(255)
  rating     Int      
  comment    String?  @db.Text
  propertyId Int
  property   Property @relation(fields: [propertyId], references: [id])
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
}
